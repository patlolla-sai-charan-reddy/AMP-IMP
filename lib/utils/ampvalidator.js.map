{"version":3,"sources":["../../src/utils/ampvalidator.js"],"names":["debug","require","validateMarkup","markup","ignoreErrors","getInstance","then","validator","validationResult","validateString","status","errors","forEach","error","severity","params","code","col","specUrl"],"mappings":";;;;;;;AAAA;;;;;;AACA,IAAMA,QAAQC,QAAQ,OAAR,EAAiB,iBAAjB,CAAd;;AAEO,IAAMC,0CAAiB,SAAjBA,cAAiB,CAACC,MAAD,EAASC,YAAT,EAA0B;AACtDJ,QAAM,oBAAN;AACA,SAAO,2BAAiBK,WAAjB,GACJC,IADI,CACC,UAACC,SAAD,EAAe;AACnB,QAAMC,mBAAmBD,UAAUE,cAAV,CAAyBN,MAAzB,EAAiC,KAAjC,CAAzB;AACA,QAAI,CAACC,YAAD,IAAiBI,iBAAiBE,MAAjB,KAA4B,MAAjD,EAAyD;AACvDF,uBAAiBG,MAAjB,CAAwBC,OAAxB,CAAgC,UAACC,KAAD,EAAW;AACzCb,cAASa,MAAMC,QAAf,SAA2BD,MAAME,MAAjC,2BACSF,MAAMG,IADf,aAC2BH,MAAMI,GADjC,SACwCJ,MAAMK,OAD9C;AAED,OAHD;AAIA,YAAMV,iBAAiBG,MAAvB;AACD;AACDX,UAAM,0BAAN,EAAkCQ,iBAAiBE,MAAnD;AACA,WAAOP,MAAP;AACD,GAZI,CAAP;AAaD,CAfM","file":"ampvalidator.js","sourcesContent":["import amphtmlValidator from 'amphtml-validator'\nconst debug = require('debug')('rampt:validator')\n\nexport const validateMarkup = (markup, ignoreErrors) => {\n  debug('validating markup.')\n  return amphtmlValidator.getInstance()\n    .then((validator) => {\n      const validationResult = validator.validateString(markup, 'AMP')\n      if (!ignoreErrors && validationResult.status !== 'PASS') {\n        validationResult.errors.forEach((error) => {\n          debug(`${error.severity} ${error.params}\n            line:${error.code} col:${error.col} ${error.specUrl}`)\n        })\n        throw validationResult.errors\n      }\n      debug('AMP validation status %s', validationResult.status)\n      return markup\n    })\n}\n"]}